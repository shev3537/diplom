<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.15.0" xml:lang="en-US">
  <compounddef id="cpp__generator_8py" kind="file" language="Python">
    <compoundname>cpp_generator.py</compoundname>
    <innerclass refid="classcpp__generator_1_1CppDocGenerator" prot="public">cpp_generator::CppDocGenerator</innerclass>
    <innernamespace refid="namespacecpp__generator">cpp_generator</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>subprocess</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>shutil</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.base<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>DocGenerator</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">find_code_dirs(repo_path):</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>code_dirs<sp/>=<sp/>set()</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>exclude_prefixes<sp/>=<sp/>(</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;build&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;cmake&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;docs&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;test&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;tests&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;examples&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;scripts&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;__&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>root,<sp/>dirs,<sp/>files<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>os.walk(repo_path):</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rel_dir<sp/>=<sp/>os.path.relpath(root,<sp/>repo_path)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>rel_dir<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>any(rel_dir.startswith(prefix)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>prefix<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>exclude_prefixes):</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>any(f.endswith((</highlight><highlight class="stringliteral">&apos;.c&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;.cpp&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;.h&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;.hpp&apos;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files):</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code_dirs.add(os.path.abspath(root))</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>code_dirs:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaults<sp/>=<sp/>[</highlight><highlight class="stringliteral">&apos;openair1&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;openair2&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;openair3&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>defaults:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abs_path<sp/>=<sp/>os.path.join(repo_path,<sp/>d)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(abs_path):</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code_dirs.add(abs_path)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code_dirs</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">create_doxygen_config(repo_path,<sp/>output_dir=&apos;doxygen_output&apos;):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>code_dirs<sp/>=<sp/>find_code_dirs(repo_path)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>input_dirs<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">.join(code_dirs)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>config_path<sp/>=<sp/>os.path.join(repo_path,<sp/></highlight><highlight class="stringliteral">&apos;Doxyfile&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(config_path,<sp/></highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">,<sp/>encoding=</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(f</highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral">PROJECT_NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&quot;C/C++<sp/>Project&quot;</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral">OUTPUT_DIRECTORY<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{output_dir}</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral">RECURSIVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>YES</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">GENERATE_HTML<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>YES</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral">GENERATE_LATEX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NO</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">INPUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{input_dirs}</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral">EXCLUDE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>build<sp/>cmake<sp/>scripts<sp/>docs<sp/>test<sp/>tests<sp/>examples</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral">EXTRACT_ALL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>YES</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral">EXTRACT_PRIVATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>YES</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral">EXTRACT_STATIC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>YES</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral">FILE_PATTERNS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>*.c<sp/>*.cpp<sp/>*.h<sp/>*.hpp</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral">QUIET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>NO</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral">WARNINGS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>YES</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral">HAVE_DOT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>YES</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral">CALL_GRAPH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>YES</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral">CALLER_GRAPH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>YES</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>config_path</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classcpp__generator_1_1CppDocGenerator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcpp__generator_1_1CppDocGenerator" kindref="compound">CppDocGenerator</ref>(<ref refid="classbase_1_1DocGenerator" kindref="compound">DocGenerator</ref>):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classcpp__generator_1_1CppDocGenerator_1ae8d92407d705d09c06afc02eed8c7f45" kindref="member">generate</ref>(self,<sp/>repo_path:<sp/>str,<sp/>repo_name:<sp/>str)<sp/>-&gt;<sp/>str:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_dir<sp/>=<sp/>os.path.join(repo_path,<sp/></highlight><highlight class="stringliteral">&apos;doxygen_output&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>os.path.exists(output_dir):</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shutil.rmtree(output_dir)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>config_path<sp/>=<sp/>create_doxygen_config(repo_path,<sp/>output_dir)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doxygen_path<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;doxygen&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proc<sp/>=<sp/>subprocess.run(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[doxygen_path,<sp/>config_path],</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cwd=repo_path,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdout=subprocess.PIPE,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stderr=subprocess.PIPE,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>proc.returncode<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_text<sp/>=<sp/>proc.stderr</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_path<sp/>=<sp/>os.path.join(repo_path,<sp/></highlight><highlight class="stringliteral">&apos;doxygen_error.log&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(log_path,<sp/></highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">,<sp/>encoding=</highlight><highlight class="stringliteral">&apos;utf-8&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(error_text)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(f</highlight><highlight class="stringliteral">&quot;Doxygen<sp/>ошибка.<sp/>Подробности<sp/>в<sp/>файле<sp/>{log_path}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Возвращаем<sp/>путь<sp/>к<sp/>папке<sp/>с<sp/>HTML</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os.path.join(output_dir,<sp/></highlight><highlight class="stringliteral">&apos;html&apos;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="api/doc_generators/cpp_generator.py"/>
  </compounddef>
</doxygen>
